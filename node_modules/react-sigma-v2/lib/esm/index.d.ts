import { CameraState, MouseCoords } from "sigma/types";
import { useSigma, useRegisterEvents, useLoadGraph, useSetSettings } from "./hooks";
import { SigmaContainer, SigmaContainerProps } from "./SigmaContainer";
import { ControlsContainer, ControlsContainerProps } from "./controls/ControlsContainer";
import { ForceAtlasControl, ForceAtlasControlProps } from "./controls/ForceAtlasControl";
import { ZoomControl, ZoomControlProps } from "./controls/ZoomControl";
import { FullScreenControl } from "./controls/FullScreenControl";
import { SearchControl } from "./controls/SearchControl";
import { NodeKey } from "graphology-types";
interface MouseEvent {
    event: MouseCoords;
}
interface NodeEvent {
    node: NodeKey;
}
declare type NodeClicked = MouseEvent & NodeEvent;
interface EventHandlers {
    clickNode: ({ node, event }: NodeClicked) => void;
    rightClickNode: ({ node, event }: NodeClicked) => void;
    downNode: ({ node, event }: NodeClicked) => void;
    enterNode: ({ node }: NodeEvent) => void;
    leaveNode: ({ node }: NodeEvent) => void;
    clickStage: ({ event }: MouseEvent) => void;
    rightClickStage: ({ event }: MouseEvent) => void;
    downStage: ({ event }: MouseEvent) => void;
    kill: () => void;
    cameraUpdated: (e: CameraState) => void;
}
export { ControlsContainer, ControlsContainerProps, EventHandlers, ForceAtlasControl, ForceAtlasControlProps, FullScreenControl, SearchControl, SigmaContainer, SigmaContainerProps, ZoomControl, ZoomControlProps, useSigma, useRegisterEvents, useLoadGraph, useSetSettings, };
